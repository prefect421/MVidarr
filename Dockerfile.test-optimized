# Test Dockerfile for dependency optimization validation
# This tests removing unused heavy dependencies

FROM python:3.12-slim AS builder

RUN apt-get update && apt-get install -y \
    build-essential \
    pkg-config \
    default-libmysqlclient-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Test the optimized requirements
COPY requirements-prod-optimized.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir --prefix=/opt/python -r requirements-prod-optimized.txt

FROM python:3.12-slim AS runtime

RUN apt-get update && apt-get install -y \
    curl \
    ffmpeg \
    wget \
    ca-certificates \
    default-libmysqlclient-dev \
    mariadb-client \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get autoclean

RUN groupadd -r mvidarr && useradd -r -g mvidarr -u 1000 mvidarr

WORKDIR /app

COPY --from=builder /opt/python /usr/local

# Basic test - just copy minimal files needed to test imports
COPY src/ /app/src/
COPY app.py version.json /app/

ENV PYTHONPATH=/app/src

# Test that application can at least import without crashing
RUN python -c "import sys; sys.path.insert(0, '/app/src'); \
import src.database.models; print('✓ Database models OK'); \
import src.api.videos; print('✓ Video API OK'); \
import src.services.imvdb_service; print('✓ Services OK'); \
print('SUCCESS: Core modules import without heavy dependencies')"

ENTRYPOINT ["python", "-c", "print('Optimized dependencies test passed!')"]