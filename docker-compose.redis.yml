version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: mvidarr_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - mvidarr_network
    environment:
      - REDIS_REPLICATION_MODE=master
    sysctls:
      - net.core.somaxconn=65535
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mvidarr_celery_worker
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./:/app
      - ./downloads:/app/downloads
      - ./logs:/app/logs
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    command: >
      sh -c "
        echo 'Waiting for Redis...' &&
        sleep 10 &&
        echo 'Starting Celery worker...' &&
        celery -A src.jobs.celery_app worker 
        --loglevel=info 
        --queues=video_downloads,metadata,image_processing,default
        --concurrency=2
        --max-tasks-per-child=100
        --time-limit=3600
        --soft-time-limit=1800
      "
    networks:
      - mvidarr_network
    healthcheck:
      test: ["CMD-SHELL", "celery -A src.jobs.celery_app inspect ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m" 
        max-file: "3"

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mvidarr_celery_beat
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./:/app
      - ./logs:/app/logs
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    command: >
      sh -c "
        echo 'Waiting for Redis...' &&
        sleep 15 &&
        echo 'Starting Celery beat scheduler...' &&
        celery -A src.jobs.celery_app beat --loglevel=info
      "
    networks:
      - mvidarr_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery_flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mvidarr_celery_flower
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "5555:5555"
    volumes:
      - ./:/app
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    command: >
      sh -c "
        echo 'Waiting for Redis...' &&
        sleep 20 &&
        echo 'Starting Flower monitoring...' &&
        celery -A src.jobs.celery_app flower 
        --port=5555 
        --broker=redis://redis:6379/0
        --basic_auth=admin:mvidarr123
      "
    networks:
      - mvidarr_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redis_data:
    driver: local

networks:
  mvidarr_network:
    driver: bridge
    name: mvidarr_network